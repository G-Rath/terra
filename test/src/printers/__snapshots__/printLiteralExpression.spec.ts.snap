// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`printLiteralExpression when literal is a Map prints a mixed map correctly 1`] = `
"{
  MyMap = {
    Enabled = printPrimitiveLiteral
    TTL = printPrimitiveLiteral
    MyArray = [
      printPrimitiveLiteral,
      printPrimitiveLiteral,
      printPrimitiveLiteral
    ]
  }
}"
`;

exports[`printLiteralExpression when literal is a Map prints array attributes correctly 1`] = `
"{
  MyArray = [
    printPrimitiveLiteral,
    printPrimitiveLiteral,
    printPrimitiveLiteral
  ]
}"
`;

exports[`printLiteralExpression when literal is a Map prints function attributes correctly 1`] = `
"{
  MyFunction = flatten(
    # FIXME - FUNCTIONS NOT YET SUPPORTED
  )
}"
`;

exports[`printLiteralExpression when literal is a Map prints nested maps correctly 1`] = `
"{
  MyMap = {
    Name = printPrimitiveLiteral
    TTL = printPrimitiveLiteral
  }
}"
`;

exports[`printLiteralExpression when literal is a Map prints primitive attributes correctly 1`] = `
"{
  Name = printPrimitiveLiteral
  TTL = printPrimitiveLiteral
}"
`;

exports[`printLiteralExpression when literal is a Map prints shallow maps correctly 1`] = `
"{
  MyMap = {
    Name = printPrimitiveLiteral
    TTL = printPrimitiveLiteral
  }
}"
`;

exports[`printLiteralExpression when literal is an array prints function elements correctly 1`] = `
"[
  [
    printPrimitiveLiteral,
    printPrimitiveLiteral,
    printPrimitiveLiteral
  ],
  map(
    # FIXME - FUNCTIONS NOT YET SUPPORTED
  )
]"
`;

exports[`printLiteralExpression when literal is an array prints map elements correctly 1`] = `
"[
  {
    Name = printPrimitiveLiteral
    TTL = printPrimitiveLiteral
  }
]"
`;

exports[`printLiteralExpression when literal is an array prints mixed elements correctly 1`] = `
"[
  [
    printPrimitiveLiteral,
    printPrimitiveLiteral,
    printPrimitiveLiteral
  ],
  printPrimitiveLiteral,
  printPrimitiveLiteral,
  {
    MyMap = {
      Enabled = printPrimitiveLiteral
      TTL = printPrimitiveLiteral
      MyArray = [
        printPrimitiveLiteral,
        printPrimitiveLiteral,
        printPrimitiveLiteral
      ]
    }
  }
]"
`;

exports[`printLiteralExpression when literal is an array prints multiple primitive elements correctly 1`] = `
"[
  printPrimitiveLiteral,
  printPrimitiveLiteral,
  printPrimitiveLiteral,
  printPrimitiveLiteral
]"
`;

exports[`printLiteralExpression when literal is an array prints nested arrays correctly 1`] = `
"[
  [
    printPrimitiveLiteral,
    printPrimitiveLiteral,
    printPrimitiveLiteral
  ],
  [
    printPrimitiveLiteral,
    printPrimitiveLiteral,
    printPrimitiveLiteral
  ]
]"
`;

exports[`printLiteralExpression when literal is an array prints single primitive element correctly 1`] = `
"[
  printPrimitiveLiteral
]"
`;
